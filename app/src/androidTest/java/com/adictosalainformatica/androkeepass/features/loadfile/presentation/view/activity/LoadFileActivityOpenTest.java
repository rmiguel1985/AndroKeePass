package com.adictosalainformatica.androkeepass.features.loadfile.presentation.view.activity;

import android.content.Context;
import android.support.test.InstrumentationRegistry;
import android.support.test.espresso.ViewInteraction;
import android.support.test.rule.ActivityTestRule;
import android.support.test.runner.AndroidJUnit4;

import com.adictosalainformatica.androkeepass.R;

import org.junit.After;
import org.junit.Before;
import org.junit.FixMethodOrder;
import org.junit.Rule;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.MethodSorters;

import static android.support.test.espresso.Espresso.onView;
import static android.support.test.espresso.action.ViewActions.click;
import static android.support.test.espresso.action.ViewActions.closeSoftKeyboard;
import static android.support.test.espresso.action.ViewActions.longClick;
import static android.support.test.espresso.action.ViewActions.replaceText;
import static android.support.test.espresso.action.ViewActions.typeText;
import static android.support.test.espresso.assertion.ViewAssertions.matches;
import static android.support.test.espresso.matcher.RootMatchers.isDialog;
import static android.support.test.espresso.matcher.ViewMatchers.isDisplayed;
import static android.support.test.espresso.matcher.ViewMatchers.withClassName;
import static android.support.test.espresso.matcher.ViewMatchers.withHint;
import static android.support.test.espresso.matcher.ViewMatchers.withId;
import static android.support.test.espresso.matcher.ViewMatchers.withParent;
import static android.support.test.espresso.matcher.ViewMatchers.withText;
import static com.adictosalainformatica.androkeepass.matchers.TestUtils.withRecyclerView;
import static org.hamcrest.Matchers.allOf;
import static org.hamcrest.Matchers.is;


@FixMethodOrder(MethodSorters.NAME_ASCENDING)
@RunWith(AndroidJUnit4.class)
public class LoadFileActivityOpenTest {

    @Rule
    public ActivityTestRule<LoadFileActivity> activityRule =
            new ActivityTestRule<>(LoadFileActivity.class);
    private Context context;
    private String databaseName = "01234";
    private String databasePassword = "1234";

    @Before
    public void setUp(){
        context = InstrumentationRegistry.getTargetContext();
    }

    @After
    public void tearDown(){
        context = null;
    }

    @Test
    public void test2_openDatabase_loads_default_value(){
        createTestDatabase();
        onView(withRecyclerView(R.id.loadfile_recycler_view_recents_databases)
                .atPositionOnView(0, R.id.loadfile_textview_database_list_item))
                .perform(click());

        ViewInteraction editText = onView(
                allOf(withClassName(is("android.widget.EditText")), isDisplayed()));
        editText.perform(click());

        ViewInteraction editText2 = onView(
                allOf(withClassName(is("android.widget.EditText")), isDisplayed()));
        editText2.perform(replaceText("1234"), closeSoftKeyboard());

        ViewInteraction appCompatButton = onView(
                allOf(withId(android.R.id.button1), withText("D'acord"),
                        withParent(allOf(withClassName(is("com.android.internal.widget.ButtonBarLayout")),
                                withParent(withClassName(is("android.widget.LinearLayout"))))),
                        isDisplayed()));
        appCompatButton.perform(click());

        int titleId = activityRule.getActivity().getResources()
                .getIdentifier( "alertTitle", "id", "android" );

        onView(withId(titleId))
                .inRoot(isDialog())
                .check(matches(withText("Info")))
                .check(matches(isDisplayed()));

        ViewInteraction appCompatButton2 = onView(
                allOf(withId(android.R.id.button1), withText("D'acord"),
                        withParent(allOf(withClassName(is("com.android.internal.widget.ButtonBarLayout")),
                                withParent(withClassName(is("android.widget.LinearLayout"))))),
                        isDisplayed()));
        appCompatButton2.perform(click());

        deleteTestDatabase();
    }

    private void createTestDatabase(){
        onView(withId(R.id.loadfile_button_create_file)).perform(click());

        onView(withHint(context.getString(R.string.loadfile_cretate_database_dialog_database))).perform(typeText(databaseName), closeSoftKeyboard());
        onView(withId(R.id.create_database_txt_password)).perform(typeText(databasePassword),
                closeSoftKeyboard());
        onView(withId(R.id.create_database_txt_password_repeat)).perform(typeText(databasePassword),
                closeSoftKeyboard());

        onView(withText(context.getString(R.string.loadfile_create_database_button))).perform(click());
    }

    private void deleteTestDatabase(){
        onView(withRecyclerView(R.id.loadfile_recycler_view_recents_databases)
                .atPositionOnView(0, R.id.loadfile_textview_database_list_item))
                .perform(longClick());

        onView(withText(context.getString(R.string.ok))).perform(click());
    }
}
